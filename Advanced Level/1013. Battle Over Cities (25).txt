5 6 5
1 2
1 3
1 4
1 5
2 3
3 5
1
2
3
4
5
#include<stdio.h>
#include<string.h>
#define maxn 1000
int edge[maxn][maxn];
int visited[maxn];
int n,m,k;
void dfs(int t){
	int i;
	visited[t]=1;
	for(i=0;i<n;i++){
		if(!visited[i] && edge[i][t]==1) dfs(i);
	}
}
int main(){

	scanf("%d%d%d",&n,&m,&k);
	int i,j;
	int va,vb;
	for(i=0;i<m;i++){
		scanf("%d%d",&va,&vb);
		edge[va-1][vb-1]=1;
		edge[vb-1][va-1]=1;
	}
	int temp,oo;
	for(i=0;i<k;i++){
		scanf("%d",&oo);
		visited[oo-1]=1;
		temp=0;
		for(j=0;j<n;j++){
			if(!visited[j]){
				dfs(j);//查找有几个分支
				temp++;
			}
		}
		printf("%d\n",temp-1);
		memset(visited,0,sizeof(visited));
	}
	return 0;
}